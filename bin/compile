#!/usr/bin/env bash

# Usage:
#
#     $ bin/compile <build-dir> <cache-dir> <env-path>

# Fail fast and fail hard.
set -eo pipefail

# Paths.
BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
ROOT_DIR=$(dirname $BIN_DIR)
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

PROFILE_PATH="$BUILD_DIR/.profile.d/swig.sh"

## Functions
# Syntax sugar.
indent() {
  sed "s/^/       /"
}

# Buildpack Steps.
puts-step() {
  echo "-----> $@"
}

# Buildpack Warnings.
puts-warn() {
  echo " !     $@"
}

# Usage: $ set-env key value
set-env() {
  echo "export $1=$2" >> $PROFILE_PATH
}

# Usage: $ set-default-env key value
set-default-env() {
  echo "export $1=\${$1:-$2}" >> $PROFILE_PATH
}

# Usage: $ set-default-env key value
un-set-env() {
  echo "unset $1" >> $PROFILE_PATH
}
## End Functions

# Switch to the repo's context.
cd $BUILD_DIR

# Where to store the Pip download cache.
CACHED_DIRS=".heroku"

# ### The Cache
mkdir -p $CACHE_DIR

mkdir -p $(dirname $PROFILE_PATH)

# Prepend proper path buildpack use.
export PATH=$BUILD_DIR/.heroku/python/bin:$BUILD_DIR/.heroku/vendor/bin:$PATH


puts-step "Preparing SWIG 2.0.5"

# Install SWIG
if [ ! -d $CACHE_DIR/swig ]; then
    echo "Not found in cache - installing" | indent
    SOURCE_TARBALL='https://s3.amazonaws.com/p22-heroku-buildpacks/libraries/swig.tar.gz'
    puts-step "Fetching and installing SWIG 2 from $SOURCE_TARBALL"
    curl -L $SOURCE_TARBALL | tar xzvf >/dev/null 2>&1
    puts-step "Installing SWIG..."
    mv swig $CACHE_DIR/swig
    rm swig.tar.gz
    echo "SWIG installed" | indent
else
    echo "SWIG detected in the cache" | indent
fi
puts-step "Making .paybox folder and copying source"
mkdir -p .paybox
cp -R $CACHE_DIR/swig .paybox
echo "Updating path" | indent
set-env PATH $PATH:$BUILD_DIR/.paybox/swig/bin/
echo "Setting SWIG_LIB environment variable" | indent
set-env SWIG_LIB $BUILD_DIR/.paybox/swig/share/swig/2.0.5/
puts-step "SWIG Complile Complete"
