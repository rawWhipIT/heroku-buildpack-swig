#!/usr/bin/env bash

# Usage:
#
#     $ bin/compile <build-dir> <cache-dir> <env-path>

# Fail fast and fail hard.
set -eo pipefail

# Paths.
BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
ROOT_DIR=$(dirname $BIN_DIR)
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
APP_DIR='/app'
PROFILE_PATH="$BUILD_DIR/.profile.d/swig.sh"

# We'll need to send these statics to other scripts we `source`.
export BUILD_DIR CACHE_DIR BIN_DIR PROFILE_PATH ROOT_DIR

# Utility Functions
source $BIN_DIR/utils
puts-step "Preparing SWIG"
echo "* Stack: $STACK" | indent

load_config

# Switch to the repo's context.
cd $BUILD_DIR

# Create directories
# The Cache
mkdir -p $CACHE_DIR
# profile.d
mkdir -p $(dirname $PROFILE_PATH)


# Install SWIG
if [ ! -d $CACHE_DIR/swig_$SWIG_VERSION ]; then
    echo "Not found in cache - installing" | indent
    puts-step "Fetching and installing SWIG 2 from $SWIG_SOURCE_URL"
    curl -O $SWIG_SOURCE_URL
    puts-step "Installing SWIG $SWIG_VERSION"
    tar_file=swig.$SWIG_VERSION.tar.gz
    tar xzvf $tar_file >/dev/null 2>&1
    mv swig $CACHE_DIR/swig_$SWIG_VERSION
    rm $tar_file
    echo "SWIG $SWIG_VERSION installed" | indent
else
    echo "SWIG $SWIG_VERSION detected in the cache" | indent
fi
puts-step "Making $SWIG_SRC folder and copying source"
mkdir -p $SWIG_SRC
cp -R $CACHE_DIR/swig_$SWIG_VERSION $SWIG_SRC
echo "Updating path in environment" | indent
set-env PATH $PATH:$APP_DIR/$SWIG_SRC/swig/bin/
echo "Setting SWIG_LIB environment variable" | indent
set-env SWIG_LIB $APP_DIR/$SWIG_SRC/swig/share/swig/$SWIG_VERSION/
puts-step "SWIG Compile Complete"
