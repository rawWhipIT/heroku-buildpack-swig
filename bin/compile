#!/usr/bin/env bash

# Usage:
#
#     $ bin/compile <build-dir> <cache-dir> <env-path>

# Fail fast and fail hard.
set -eo pipefail

# Paths.
BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
ROOT_DIR=$(dirname $BIN_DIR)
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
APP_DIR='/app'
PROFILE_PATH="$BUILD_DIR/.profile.d/swig.sh"

# We'll need to send these statics to other scripts we `source`.
export BUILD_DIR CACHE_DIR BIN_DIR PROFILE_PATH ROOT_DIR

# Utility Functions
source $BIN_DIR/utils
load_config
puts-step "SWIG Buildpack ($BUILDPACK_VERSION)"
echo "* Stack: $STACK" | indent

ORIG_BUILD_DIR=$BUILD_DIR
BUILD_DIR=$APP_DIR

# Switch to the repo's context.
cd $BUILD_DIR
echo $BUILD_DIR
# Create directories
# The Cache
mkdir -p $CACHE_DIR

puts-step "Checking cache"

# Install SWIG
if [ ! -d $CACHE_DIR/swig ]; then
    cd $BUILD_DIR
    echo "** Not found in cache - installing" | indent
    puts-step "Fetching and installing SWIG 2 from $SWIG_SOURCE_URL"
    echo "-----> Fetching and installing SWIG 2 from $SWIG_SOURCE_URL"
    curl -O $SWIG_SOURCE_URL >/dev/null 2>&1
    echo "-----> Installing ..."
    tar xzvf swig.$SWIG_VERSION.tar.gz >/dev/null 2>&1
    mv swig $CACHE_DIR/swig
    rm swig.$SWIG_VERSION.tar.gz
    echo "SWIG installed" | indent
else
    echo "SWIG $SWIG_VERSION detected in the cache" | indent
fi
puts-step "Making $SWIG_SRC folder and copying source from $CACHE_DIR/swig"
mkdir -p $SWIG_SRC
cp -R $CACHE_DIR/swig $SWIG_SRC 
echo "Updating path in environment" | indent
#set-env PATH $PATH:$BUILD_DIR/$SWIG_SRC/swig/bin
PATH=$PATH:$BUILD_DIR/$SWIG_SRC/swig/bin/
export PATH
echo "Setting SWIG_LIB environment variable" | indent
#set-env SWIG_LIB $BUILD_DIR/$SWIG_SRC/swig/share/swig/$SWIG_VERSION
SWIG_LIB=$BUILD_DIR/$SWIG_SRC/swig/share/swig/$SWIG_VERSION/
#export SWIG_LIB
puts-step "Building Export Script"
cat <<EOF > export
export PATH="$PATH:\$PATH"
export SWIG_LIB="$BUILD_DIR/$SWIG_SRC/swig/share/swig/$SWIG_VERSION/"
EOF
cat export
puts-step "SWIG Compile Complete"
